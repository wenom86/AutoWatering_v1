//=============================================================
// НАЗВАНИЕ ПРОГРАММЫ: AutoWatering
// ВЕРСИЯ ПРОГРАММЫ: 0.1 (01.04.2020г)
// ВЕРСИЯ ARDUINO IDE: 1.8.11
//=============================================================
#include <AmperkaKB.h>          // + библ. работы с клавиатурой 1х4,4х3,4х4.
#include <OneWire.h>            // + для термодатчика 18b20
#include <LiquidCrystal.h>      // + библ. LCD-экрана.
#include <DS3231.h>             // + библ. работы с модулем часов.
float version = 0.1;            // ВЕРСИЯ ПРОГРАММЫ


AmperkaKB KB(42, 43, 44, 45, 46, 47, 48, 49); //номера пинов ардуино, подключенные к шлейфу клавиатуры (нумерация слева-направо)
OneWire ds(7);                  // линия 1-Wire (DS18b20 и т.д) будет на pin 7
LiquidCrystal lcd(22, 28, 23, 24, 25, 26, 27);   // для МЕГИ 2560. (A=5v/K=GND)(VSS=GND/VDD=5v/RS=pin22/RW=pin28/E=pin23/D4=pin24/D5=pin25/D6=pin26/D7=pin27).
DS3231  rtc(20, 21);            //шина, на которую подключены часы (для ардуино нано на 328 чипе, это пины A4/A5)(для меги - пины 20/21).
#define LCDbright 31            // управление вкл/выкл подсветки экрана на 31 пине. 
int T1,T2,t2;                    // инициализируем переменные для значений температуры.....
int ekran;                       //переменная для выбора экрана меню.
int m=0;                         //переменная для экранов меню.



void setup() {
KB.begin(KB4x4, 3000); // инициализация клавиатуры. значение 3000 - время длительного нажатия кнопки.  
delay(500);            // ожидание
Serial.begin(9600);    // инициализация сериал-порта 0, для вывода служебной инф-ии в монитор порта.
delay(500);            // ожидание  
lcd.begin(20, 4);      // инициализация экрана (20 символов в 4 строках).
delay(500);            // ожидание
rtc.begin();           // инициализация часов на DS3231.
delay(500);            // ожидание
pinMode(LCDbright, OUTPUT);           //выводы устанавливаюся в режим выхода
digitalWrite(LCDbright, HIGH);        //на выходе высокий уровень
privetstvie();         // Выводим приветствие на экран при включении питания(название, версия, часы и т.д.) (вкладка Read_LCD)


}
void loop() {



KB.read();                   //считываем нажатие кнопок клавиатуры.
if (KB.justPressed()) {
    // печатаем номер кнопки и её символ в последовательный порт
    Serial.print("Key is press ");
    Serial.print(KB.getNum);
    Serial.print(" = \"");
    Serial.print(KB.getChar);
    Serial.println("\"");
  }
  // определяем отжатие кнопки
  if (KB.justReleased()) {
    // печатаем номер кнопки и её символ в последовательный порт
    Serial.print("Key is release ");
    Serial.print(KB.getNum);
    Serial.print(" = \"");
    Serial.print(KB.getChar);
    Serial.println("\"");
  }
  // определяем зажатие кнопки на 3 секунды
  if (KB.isHold()) {
    // печатаем номер кнопки и её символ в последовательный порт
    Serial.print("Key on long press ");
    Serial.print(KB.getNum);
    Serial.print(" = \"");
    Serial.print(KB.getChar);
    Serial.println("\"");
  }   




NajatieUpDownLeftRight();    // Обрабатываем нажатие клавиш Вверх/Вниз. (вкладка Read_KEYBOARD)  
Read_ekran();                // Отображаем содержимое выбранного экрана (вкладка Read_LCD)

}
